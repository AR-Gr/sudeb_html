{"version":3,"sources":["Config.js","layouts/Maps.js","layouts/SpeedCard.js","layouts/Home.js","index.js"],"names":["module","exports","BASE_URL","mapColor1","mapColor2","mapColor3","mapOpacity","mapBorderColor","defaultProps","normalStyle","color","fontSize","padding","mapStyle","width","height","MyPopup","props","avg_d_mbps_wt","avg_u_mbps_wt","NeighName","Box","border","style","backgroundColor","InputLabel","Maps","console","log","locations","length","Map","center","zoom","maxWidth","TileLayer","url","GeoJSON","data","onEachFeature","feature","layer","Math","round","properties","setStyle","weight","fillColor","fillOpacity","popupContentNode","popupContentHtml","ReactDOMServer","renderToString","bindTooltip","minWidth","className","radius","crs","SpeedCard","title","Home","useState","download","setDownload","upload","setUpload","setLatencyData","setJitterData","mapData","setMapData","useEffect","location_count","sum_downlaod","sum_upload","lat_5","lat_10","lat_15","lat_20","axios","get","then","res","map","location","lat","Number","avg_lat_ms_wt","toFixed","Button","variant","onClick","hist","createBrowserHistory","ReactDOM","render","history","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.99567f94.chunk.js","sourcesContent":["module.exports={\r\n    BASE_URL:'http://localhost:5000',\r\n    mapColor1:'red',\r\n    mapColor2:'green',\r\n    mapColor3:'blue',\r\n    mapOpacity:1,\r\n    mapBorderColor:'#000',\r\n    \r\n}\r\n","import React from \"react\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { Map,TileLayer, GeoJSON} from 'react-leaflet';\r\nimport { Box, InputLabel } from \"@material-ui/core\";\r\nimport 'leaflet/dist/leaflet.css';\r\nimport \"assets/App.css\";\r\nimport {mapColor1,mapColor2,mapColor3,mapOpacity,mapBorderColor} from '../Config';\r\nconst defaultProps = {\r\n  // border: 1,\r\n  // borderColor: \"grey.500\",\r\n  // backgroundColor: \"black\"\r\n};\r\nconst normalStyle = {\r\n  color: \"white\",\r\n  fontSize: \"20px\",\r\n  padding: \"5px\",\r\n};\r\nconst mapStyle = {\r\n  width:'100%',\r\n  height:'700px',\r\n}\r\nfunction MyPopup(props) {\r\n  const { avg_d_mbps_wt,avg_u_mbps_wt,NeighName } = props;\r\n  return (\r\n    <Box border={0}style={{ backgroundColor: \"black\" }} {...defaultProps}>\r\n        <InputLabel style={normalStyle}>{NeighName} </InputLabel>\r\n        <InputLabel style={normalStyle}>Download:{avg_d_mbps_wt} Mbps</InputLabel>\r\n        <InputLabel style={normalStyle}>Upload:{avg_u_mbps_wt} Mbps</InputLabel>\r\n    </Box>\r\n  );\r\n}\r\nexport default function Maps(props) {\r\n    const onEachFeature = (feature, layer) => {\r\n        const popupOptions = {\r\n        minWidth: 250,\r\n        maxWidth: 500,\r\n        className: \"popup-classname\"\r\n        };\r\n        // console.log(feature);\r\n        // var coordinates = feature.geometry.coordinates;\r\n        // var swapped_coordinates = [coordinates[1], coordinates[0]];  //Swap Lat and Lng\r\n        var avg_d_mbps_wt = Math.round(feature.properties.avg_d_mbps_wt/1000);\r\n        var avg_u_mbps_wt = Math.round(feature.properties.avg_u_mbps_wt/1000);\r\n        var NeighName = feature.properties.NeighName;\r\n        layer.setStyle({\r\n        weight: 1,\r\n        color: mapBorderColor,\r\n        fillColor: avg_d_mbps_wt > 150 ? mapColor1 : avg_d_mbps_wt > 100 ? mapColor2: mapColor3,\r\n        fillOpacity:mapOpacity,\r\n        });\r\n        const popupContentNode = <MyPopup avg_d_mbps_wt={avg_d_mbps_wt} avg_u_mbps_wt={avg_u_mbps_wt} NeighName={NeighName} />;\r\n        const popupContentHtml = ReactDOMServer.renderToString(popupContentNode);\r\n        layer.bindTooltip(popupContentHtml, popupOptions);\r\n    }\r\n    console.log(props)\r\n    if(props.locations.length){\r\n      return (\r\n          <div>\r\n              {/* <Map center={[-81.35, 28.35]} zoom={9}> */}\r\n              <Map center={[28.475, -81.35]} zoom={12} maxWidth={30} style={mapStyle}>\r\n                <TileLayer\r\n                    // attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                  />\r\n                  <GeoJSON data={props.locations} onEachFeature={onEachFeature} radius={2000} crs={'urn:ogc:def:crs:EPSG::26916'} />\r\n              </Map> \r\n          </div>\r\n      );\r\n    }else{\r\n      return (\r\n        <div>\r\n          \r\n        </div>\r\n      )\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nconst SpeedCard = (props) => {\r\n    return(\r\n        <div className=\"col-md-3\">\r\n            <div className=\"text-center top-card\">\r\n                {props.title}\r\n            </div>\r\n            <div className=\"top-card-text text-center\">\r\n                {props.data} Mbps\r\n            </div>                        \r\n        </div>\r\n    )\r\n}\r\nexport default SpeedCard;","import React, { useState,useEffect } from 'react';\r\nimport MAP_COMPONENT from \"./Maps\";\r\nimport locations from \"assets/data.json\";\r\nimport axios from 'axios';\r\nimport SpeedCard from './SpeedCard';\r\nimport ChartCard from './ChartCard';\r\nimport {BASE_URL} from './../Config';\r\nimport './Home.css';\r\nimport { Button } from \"@material-ui/core\";\r\n\r\n\r\nconst Home = () => {\r\n    const [download,setDownload] = useState(0);\r\n    const [upload,setUpload] = useState(0);\r\n    const [latencyData,setLatencyData] = useState(0);\r\n    const [jitterData,setJitterData] = useState(0);\r\n    const [mapData,setMapData] = useState([]);\r\n    \r\n    const handleSpeedTest = () => {\r\n        axios.get(BASE_URL+'/api/speedtest').then((res)=>{\r\n            console.log(res)\r\n        });\r\n    }\r\n    useEffect(()=>{\r\n        let location_count = 0;\r\n        let sum_downlaod = 0;\r\n        let sum_upload = 0;\r\n        let lat_5 =0,lat_10 = 0,lat_15 = 0,lat_20 = 0;\r\n        axios.get(BASE_URL+'/api/map').then((res)=>{\r\n            location_count = res.data.length;\r\n            setMapData(locations);\r\n            res.data.map(location=>{\r\n                let lat = Number(location.properties.avg_lat_ms_wt).toFixed()*1;\r\n                if(lat<10) lat_5++\r\n                if( lat<15&&lat>=10) lat_10++\r\n                if( lat<20&&lat>=15) lat_15++\r\n                if( lat>=20) lat_20++\r\n                sum_upload += location.properties.avg_u_mbps_wt\r\n                sum_downlaod += location.properties.avg_d_mbps_wt\r\n                return true;\r\n            })\r\n            setDownload(Math.round(sum_downlaod/location_count/1000))\r\n            setUpload(Math.round(sum_upload/location_count/1000))\r\n            setJitterData([\r\n                ['Jitter', '%'],\r\n                ['5~10ms ',(lat_5/(lat_5+lat_10))*100],\r\n                ['10~15ms',(lat_10/(lat_5+lat_10))*100],\r\n            ])\r\n            setLatencyData([\r\n                ['Latency', '%'],\r\n                ['15~20ms', (lat_15/(lat_15+lat_20))*100],\r\n                ['more than 20ms',(lat_20/(lat_15+lat_20))*100 ],\r\n            ])\r\n        })\r\n    },[]);\r\n    return (\r\n        <div className={'main'}>\r\n            <div className=\"row\">\r\n                <SpeedCard title={'Upload'} data={upload}/>\r\n                <SpeedCard title={'Downlaod'} data={download}/>\r\n\r\n            </div>\r\n            <div className=\"row\">\r\n                <Button variant=\"contained\" color=\"primary\" onClick={()=>handleSpeedTest()} >Test Speed</Button>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <MAP_COMPONENT  locations={mapData}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Home from './layouts/Home';\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={hist}>\r\n    <Switch>\r\n      <Route path=\"/\" component={Home} />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}