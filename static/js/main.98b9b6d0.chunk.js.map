{"version":3,"sources":["Config.js","layouts/Maps.js","layouts/SpeedCard.js","layouts/ChartCard.js","layouts/Home.js","layouts/SpeedTest.js","index.js"],"names":["module","exports","BASE_URL","mapColor1","mapColor2","mapColor3","mapOpacity","mapBorderColor","defaultProps","normalStyle","color","fontSize","padding","mapStyle","width","height","MyPopup","props","avg_d_mbps_wt","avg_u_mbps_wt","NeighName","Box","border","style","backgroundColor","InputLabel","Maps","console","log","locations","length","Map","center","zoom","maxWidth","TileLayer","url","GeoJSON","data","onEachFeature","feature","layer","Math","round","properties","setStyle","weight","fillColor","fillOpacity","popupContentNode","popupContentHtml","ReactDOMServer","renderToString","bindTooltip","minWidth","className","radius","crs","SpeedCard","size","title","ChartCard","chartType","type","loader","options","pieHole","legend","rootProps","Home","useState","download","setDownload","upload","setUpload","latencyData","setLatencyData","jitterData","setJitterData","mapData","setMapData","useEffect","location_count","sum_downlaod","sum_upload","lat_5","lat_10","lat_15","lat_20","axios","get","then","res","map","location","lat","Number","avg_lat_ms_wt","toFixed","src","hist","createBrowserHistory","ReactDOM","render","history","path","component","SpeedTest","document","getElementById"],"mappings":"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","file":"static/js/main.98b9b6d0.chunk.js","sourcesContent":["module.exports={\n    BASE_URL:'http://localhost:5000',\n    mapColor1:'red',\n    mapColor2:'green',\n    mapColor3:'blue',\n    mapOpacity:1,\n    mapBorderColor:'#000',\n    \n}\n","import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { Map,TileLayer, GeoJSON} from 'react-leaflet';\nimport { Box, InputLabel } from \"@material-ui/core\";\nimport 'leaflet/dist/leaflet.css';\nimport \"assets/App.css\";\nimport {mapColor1,mapColor2,mapColor3,mapOpacity,mapBorderColor} from '../Config';\nconst defaultProps = {\n  // border: 1,\n  // borderColor: \"grey.500\",\n  // backgroundColor: \"black\"\n};\nconst normalStyle = {\n  color: \"white\",\n  fontSize: \"20px\",\n  padding: \"5px\",\n};\nconst mapStyle = {\n  width:'100%',\n  height:'700px',\n}\nfunction MyPopup(props) {\n  const { avg_d_mbps_wt,avg_u_mbps_wt,NeighName } = props;\n  return (\n    <Box border={0}style={{ backgroundColor: \"black\" }} {...defaultProps}>\n        <InputLabel style={normalStyle}>{NeighName} </InputLabel>\n        <InputLabel style={normalStyle}>Download:{avg_d_mbps_wt} Mbps</InputLabel>\n        <InputLabel style={normalStyle}>Upload:{avg_u_mbps_wt} Mbps</InputLabel>\n    </Box>\n  );\n}\nexport default function Maps(props) {\n    const onEachFeature = (feature, layer) => {\n        const popupOptions = {\n        minWidth: 250,\n        maxWidth: 500,\n        className: \"popup-classname\"\n        };\n        // console.log(feature);\n        // var coordinates = feature.geometry.coordinates;\n        // var swapped_coordinates = [coordinates[1], coordinates[0]];  //Swap Lat and Lng\n        var avg_d_mbps_wt = Math.round(feature.properties.avg_d_mbps_wt/1000);\n        var avg_u_mbps_wt = Math.round(feature.properties.avg_u_mbps_wt/1000);\n        var NeighName = feature.properties.NeighName;\n        layer.setStyle({\n        weight: 1,\n        color: mapBorderColor,\n        fillColor: avg_d_mbps_wt > 150 ? mapColor1 : avg_d_mbps_wt > 100 ? mapColor2: mapColor3,\n        fillOpacity:mapOpacity,\n        });\n        const popupContentNode = <MyPopup avg_d_mbps_wt={avg_d_mbps_wt} avg_u_mbps_wt={avg_u_mbps_wt} NeighName={NeighName} />;\n        const popupContentHtml = ReactDOMServer.renderToString(popupContentNode);\n        layer.bindTooltip(popupContentHtml, popupOptions);\n    }\n    console.log(props)\n    if(props.locations.length){\n      return (\n          <div>\n              {/* <Map center={[-81.35, 28.35]} zoom={9}> */}\n              <Map center={[28.475, -81.35]} zoom={12} maxWidth={30} style={mapStyle}>\n                <TileLayer\n                    // attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                  />\n                  <GeoJSON data={props.locations} onEachFeature={onEachFeature} radius={2000} crs={'urn:ogc:def:crs:EPSG::26916'} />\n              </Map> \n          </div>\n      );\n    }else{\n      return (\n        <div>\n          \n        </div>\n      )\n    }\n}\n","import React from 'react';\n\nconst SpeedCard = (props) => {\n    return(\n        <div className={props.size?'col-md-'+props.size:'col-md-3'}>\n            <div className=\"text-center top-card\">\n                {props.title}\n            </div>\n            <div className=\"top-card-text text-center\">\n                {props.data}\n            </div>                        \n        </div>\n    )\n}\nexport default SpeedCard;","import React from 'react';\nimport Chart from \"react-google-charts\";\n\nconst ChartCard = (props) => {\n    return (\n        <div className=\"col-md-3\">\n            <div className=\"text-center top-card\">\n                {props.title}\n            </div>\n            <div className=\"\">\n            <Chart\n                width={'100%'}\n                height={'300px'}\n                chartType={props.type}\n                loader={<div>Loading Chart</div>}\n                data={props.data}\n                options={{\n                    // Just add this option\n                    pieHole: 0.4,\n                    legend: 'none',\n                    backgroundColor: 'none'\n                }}\n                rootProps={{ 'data-testid': '3' }}\n                />\n            </div>                        \n        </div>\n    )\n}\nexport default ChartCard;","import React, { useState,useEffect } from 'react';\r\nimport MAP_COMPONENT from \"./Maps\";\r\nimport locations from \"assets/data.json\";\r\nimport axios from 'axios';\r\nimport SpeedCard from './SpeedCard';\r\nimport ChartCard from './ChartCard';\r\nimport {BASE_URL} from './../Config';\r\nimport './Home.css';\r\n\r\n\r\nconst Home = () => {\r\n    const [download,setDownload] = useState(0);\r\n    const [upload,setUpload] = useState(0);\r\n    const [latencyData,setLatencyData] = useState(0);\r\n    const [jitterData,setJitterData] = useState(0);\r\n    const [mapData,setMapData] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        let location_count = 0;\r\n        let sum_downlaod = 0;\r\n        let sum_upload = 0;\r\n        let lat_5 =0,lat_10 = 0,lat_15 = 0,lat_20 = 0;\r\n        axios.get(BASE_URL+'/api/map').then((res)=>{\r\n            location_count = res.data.length;\r\n            setMapData(locations);\r\n            res.data.map(location=>{\r\n                let lat = Number(location.properties.avg_lat_ms_wt).toFixed()*1;\r\n                if(lat<10) lat_5++\r\n                if( lat<15&&lat>=10) lat_10++\r\n                if( lat<20&&lat>=15) lat_15++\r\n                if( lat>=20) lat_20++\r\n                sum_upload += location.properties.avg_u_mbps_wt\r\n                sum_downlaod += location.properties.avg_d_mbps_wt\r\n                return true;\r\n            })\r\n            setDownload(Math.round(sum_downlaod/location_count/1000))\r\n            setUpload(Math.round(sum_upload/location_count/1000))\r\n            setJitterData([\r\n                ['Jitter', '%'],\r\n                ['5~10ms ',(lat_5/(lat_5+lat_10))*100],\r\n                ['10~15ms',(lat_10/(lat_5+lat_10))*100],\r\n            ])\r\n            setLatencyData([\r\n                ['Latency', '%'],\r\n                ['15~20ms', (lat_15/(lat_15+lat_20))*100],\r\n                ['more than 20ms',(lat_20/(lat_15+lat_20))*100 ],\r\n            ])\r\n        })\r\n    },[]);\r\n    return (\r\n        <div className={'main'}>\r\n            <div className=\"row\">\r\n                <SpeedCard title={'Upload'} data={upload}/>\r\n                <SpeedCard title={'Downlaod'} data={download}/>\r\n                <ChartCard title={'Latency'} data={latencyData} type={'PieChart'} options={'PieChart'} />\r\n                <ChartCard title={'Jitter'} data={jitterData} type={'PieChart'} options={'PieChart'} />\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                    <MAP_COMPONENT  locations={mapData}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useState,useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport SpeedCard from './SpeedCard';\r\nimport {BASE_URL} from './../Config';\r\nimport './Home.css';\r\nimport './SpeedTest.css';\r\nimport { Button } from \"@material-ui/core\";\r\nimport GaugeChart from 'react-gauge-chart';\r\n\r\nconst Home = () => {\r\n    const [download,SetDownload] = useState(0);\r\n    const [upload,SetUpload] = useState(0);\r\n    const [jitter,SetUpJitter] = useState(0);\r\n    const [legend,SetLegend] = useState(0);\r\n    const [gaugeData,setGaugeData] = useState(0);\r\n    const [isTest,setTest] = useState(false);\r\n    \r\n    const handleSpeedTest = () => {\r\n        if(isTest){\r\n            return;\r\n        }else{\r\n            setTest(true);\r\n        }\r\n        let tmpgaugeData = gaugeData;\r\n        let isAxiosFinished = false;\r\n        setInterval(() => {\r\n            if(isAxiosFinished){\r\n                return;\r\n            }\r\n            tmpgaugeData+=(Math.random()-0.5)/10\r\n            tmpgaugeData= (tmpgaugeData>0)?tmpgaugeData:0;\r\n            setGaugeData(tmpgaugeData);\r\n            console.log(tmpgaugeData)\r\n        }, 300);\r\n        axios.get(BASE_URL+'/api/speedtest').then((res)=>{\r\n            console.log(res.data.download.bytes)\r\n            SetUpJitter(res.data.ping.jitter);\r\n            SetLegend(res.data.ping.legend);\r\n            SetDownload((res.data.download.bytes/104857600).toFixed(2));\r\n            setGaugeData((res.data.download.bytes/104857600).toFixed(2));\r\n            setGaugeData(0);\r\n            isAxiosFinished=true;\r\n            setTimeout(() => {\r\n                setGaugeData((res.data.download.bytes/104857600).toFixed(2));\r\n                SetUpload((res.data.upload.bytes/104857600).toFixed(2));\r\n            }, 2000);\r\n            setGaugeData(0);\r\n            setTest(false);\r\n        });\r\n    }\r\n    return (\r\n        <div>\r\n            <iframe src=\"https://climaxu.speedtestcustom.com\" style={{height:'100vh',width:'100%',border:'0px'}}></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Home from './layouts/Home';\r\nimport SpeedTest from './layouts/SpeedTest';\r\n\r\nconst hist = createBrowserHistory();\r\n\r\nReactDOM.render(\r\n  <Router history={hist}>\r\n    <Switch>\r\n      <Route path=\"/speedtest\" component={SpeedTest} />\r\n      <Route path=\"/\" component={Home} />\r\n    </Switch>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}